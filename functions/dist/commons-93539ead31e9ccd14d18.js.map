{"version":3,"file":"commons-93539ead31e9ccd14d18.js","mappings":"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","sources":["webpack://my-gatsby-site/./node_modules/@emotion/is-prop-valid/dist/emotion-is-prop-valid.esm.js","webpack://my-gatsby-site/./node_modules/@emotion/styled/base/dist/emotion-styled-base.browser.esm.js","webpack://my-gatsby-site/./src/components/seo.jsx","webpack://my-gatsby-site/./src/components/variable.js","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/node/id.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/value/types/utils.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/noop.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/frameloop/data.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/frameloop/on-next-frame.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/frameloop/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/array.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/value/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/errors.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/time-conversion.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/mix.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/mix-color.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/mix-complex.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/progress.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/offsets/default.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/easing/back.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/utils/easing.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/legacy-popmotion/keyframes.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/offsets/time.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/legacy-popmotion/find-spring.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/legacy-popmotion/spring.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/legacy-popmotion/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/legacy-popmotion/decay.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/waapi/easing.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/waapi/supports.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/waapi/create-accelerated-animation.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/waapi/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/waapi/utils/get-final-keyframe.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/create-instant-animation.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/legacy-popmotion/inertia.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/utils/animation.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/debug/record.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/animate.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/motion.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import memoize from '@emotion/memoize';\n\nvar reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|enterKeyHint|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/; // https://esbench.com/bench/5bfee68a4cd7e6009ef61d23\n\nvar isPropValid = /* #__PURE__ */memoize(function (prop) {\n  return reactPropsRegex.test(prop) || prop.charCodeAt(0) === 111\n  /* o */\n  && prop.charCodeAt(1) === 110\n  /* n */\n  && prop.charCodeAt(2) < 91;\n}\n/* Z+1 */\n);\n\nexport default isPropValid;\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useContext, createElement, Fragment } from 'react';\nimport isPropValid from '@emotion/is-prop-valid';\nimport { withEmotionCache, ThemeContext } from '@emotion/react';\nimport { getRegisteredStyles, registerStyles, insertStyles } from '@emotion/utils';\nimport { serializeStyles } from '@emotion/serialize';\nimport { useInsertionEffectAlwaysWithSyncFallback } from '@emotion/use-insertion-effect-with-fallbacks';\n\nvar testOmitPropsOnStringTag = isPropValid;\n\nvar testOmitPropsOnComponent = function testOmitPropsOnComponent(key) {\n  return key !== 'theme';\n};\n\nvar getDefaultShouldForwardProp = function getDefaultShouldForwardProp(tag) {\n  return typeof tag === 'string' && // 96 is one less than the char code\n  // for \"a\" so this is checking that\n  // it's a lowercase character\n  tag.charCodeAt(0) > 96 ? testOmitPropsOnStringTag : testOmitPropsOnComponent;\n};\nvar composeShouldForwardProps = function composeShouldForwardProps(tag, options, isReal) {\n  var shouldForwardProp;\n\n  if (options) {\n    var optionsShouldForwardProp = options.shouldForwardProp;\n    shouldForwardProp = tag.__emotion_forwardProp && optionsShouldForwardProp ? function (propName) {\n      return tag.__emotion_forwardProp(propName) && optionsShouldForwardProp(propName);\n    } : optionsShouldForwardProp;\n  }\n\n  if (typeof shouldForwardProp !== 'function' && isReal) {\n    shouldForwardProp = tag.__emotion_forwardProp;\n  }\n\n  return shouldForwardProp;\n};\n\nvar ILLEGAL_ESCAPE_SEQUENCE_ERROR = \"You have illegal escape sequence in your template literal, most likely inside content's property value.\\nBecause you write your CSS inside a JavaScript string you actually have to do double escaping, so for example \\\"content: '\\\\00d7';\\\" should become \\\"content: '\\\\\\\\00d7';\\\".\\nYou can read more about this here:\\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences\";\n\nvar Insertion = function Insertion(_ref) {\n  var cache = _ref.cache,\n      serialized = _ref.serialized,\n      isStringTag = _ref.isStringTag;\n  registerStyles(cache, serialized, isStringTag);\n  var rules = useInsertionEffectAlwaysWithSyncFallback(function () {\n    return insertStyles(cache, serialized, isStringTag);\n  });\n\n  return null;\n};\n\nvar createStyled = function createStyled(tag, options) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (tag === undefined) {\n      throw new Error('You are trying to create a styled element with an undefined component.\\nYou may have forgotten to import it.');\n    }\n  }\n\n  var isReal = tag.__emotion_real === tag;\n  var baseTag = isReal && tag.__emotion_base || tag;\n  var identifierName;\n  var targetClassName;\n\n  if (options !== undefined) {\n    identifierName = options.label;\n    targetClassName = options.target;\n  }\n\n  var shouldForwardProp = composeShouldForwardProps(tag, options, isReal);\n  var defaultShouldForwardProp = shouldForwardProp || getDefaultShouldForwardProp(baseTag);\n  var shouldUseAs = !defaultShouldForwardProp('as');\n  return function () {\n    var args = arguments;\n    var styles = isReal && tag.__emotion_styles !== undefined ? tag.__emotion_styles.slice(0) : [];\n\n    if (identifierName !== undefined) {\n      styles.push(\"label:\" + identifierName + \";\");\n    }\n\n    if (args[0] == null || args[0].raw === undefined) {\n      styles.push.apply(styles, args);\n    } else {\n      if (process.env.NODE_ENV !== 'production' && args[0][0] === undefined) {\n        console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n      }\n\n      styles.push(args[0][0]);\n      var len = args.length;\n      var i = 1;\n\n      for (; i < len; i++) {\n        if (process.env.NODE_ENV !== 'production' && args[0][i] === undefined) {\n          console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n        }\n\n        styles.push(args[i], args[0][i]);\n      }\n    } // $FlowFixMe: we need to cast StatelessFunctionalComponent to our PrivateStyledComponent class\n\n\n    var Styled = withEmotionCache(function (props, cache, ref) {\n      var FinalTag = shouldUseAs && props.as || baseTag;\n      var className = '';\n      var classInterpolations = [];\n      var mergedProps = props;\n\n      if (props.theme == null) {\n        mergedProps = {};\n\n        for (var key in props) {\n          mergedProps[key] = props[key];\n        }\n\n        mergedProps.theme = useContext(ThemeContext);\n      }\n\n      if (typeof props.className === 'string') {\n        className = getRegisteredStyles(cache.registered, classInterpolations, props.className);\n      } else if (props.className != null) {\n        className = props.className + \" \";\n      }\n\n      var serialized = serializeStyles(styles.concat(classInterpolations), cache.registered, mergedProps);\n      className += cache.key + \"-\" + serialized.name;\n\n      if (targetClassName !== undefined) {\n        className += \" \" + targetClassName;\n      }\n\n      var finalShouldForwardProp = shouldUseAs && shouldForwardProp === undefined ? getDefaultShouldForwardProp(FinalTag) : defaultShouldForwardProp;\n      var newProps = {};\n\n      for (var _key in props) {\n        if (shouldUseAs && _key === 'as') continue;\n\n        if ( // $FlowFixMe\n        finalShouldForwardProp(_key)) {\n          newProps[_key] = props[_key];\n        }\n      }\n\n      newProps.className = className;\n      newProps.ref = ref;\n      return /*#__PURE__*/createElement(Fragment, null, /*#__PURE__*/createElement(Insertion, {\n        cache: cache,\n        serialized: serialized,\n        isStringTag: typeof FinalTag === 'string'\n      }), /*#__PURE__*/createElement(FinalTag, newProps));\n    });\n    Styled.displayName = identifierName !== undefined ? identifierName : \"Styled(\" + (typeof baseTag === 'string' ? baseTag : baseTag.displayName || baseTag.name || 'Component') + \")\";\n    Styled.defaultProps = tag.defaultProps;\n    Styled.__emotion_real = Styled;\n    Styled.__emotion_base = baseTag;\n    Styled.__emotion_styles = styles;\n    Styled.__emotion_forwardProp = shouldForwardProp;\n    Object.defineProperty(Styled, 'toString', {\n      value: function value() {\n        if (targetClassName === undefined && process.env.NODE_ENV !== 'production') {\n          return 'NO_COMPONENT_SELECTOR';\n        } // $FlowFixMe: coerce undefined to string\n\n\n        return \".\" + targetClassName;\n      }\n    });\n\n    Styled.withComponent = function (nextTag, nextOptions) {\n      return createStyled(nextTag, _extends({}, options, nextOptions, {\n        shouldForwardProp: composeShouldForwardProps(Styled, nextOptions, true)\n      })).apply(void 0, styles);\n    };\n\n    return Styled;\n  };\n};\n\nexport default createStyled;\n","import React from 'react'\n\nconst Seo = () =>{\n  return(\n    <>\n      <html lang=\"ja\"/>\n      <meta name=\"robots\" content=\"noindex\"/>\n      <meta name=\"googlebot\" content=\"noindex\" />\n      <meta name=\"googlebot-news\" content=\"nosnippet\" />\n      <script type=\"application/javascript\">\n{`\n  {\n    (function(d){\n      var config = {\n        kitId: '${process.env.TYPEKIT_ID}',\n        scriptTimeout: 3000,\n        async: true\n      },\n      h\n    })\n  }\n`}\n      </script>\n      <title>m.k_portfolio</title>\n    </>\n  )\n}\n\nexport default Seo\n","/* colors */\nexport const val = {\n  pink: '#FF6C9C',\n  black: '#33272a',\n  blackRGBA: 'rgba(0,0,0,.2)',\n  lightGray: '#ddd',\n  darkGray: '#6A6669',\n  white: '#f4f4f4',\n  yellow: '#FFD561',\n  mint: '#4FB2C0',\n  red: '#B61A24',\n\n\n/* fontSize margin padding */\n  s200: '12.5rem',\n  s184: '11.5rem',\n  s160: '10rem',\n  s152: '9.5rem',\n  s120: '7.5rem',\n  s104: '6.5rem',\n  s88: '5.5rem',\n  s72: '4.5rem',\n  s64: '4rem',\n  s56: '3.5rem',\n  s48: '3rem',\n  s40: '2.5rem',\n  s32: '2rem',\n  s24: '1.5rem',\n  s20: '1.25rem',\n  s18: '1.125rem',\n  s16: '1rem',\n  s15: '0.9375rem',\n  s14: '0.875rem',\n  s12: '0.75rem',\n  s10: '0.625rem',\n  s8: '0.5rem',\n  s4: '0.25rem',\n\n/* shadow */\n  shadow: '0px 3px 10px 0px rgba(0, 0, 0, 0.10),0px 0px 2px 0px rgba(0, 0, 0, 0.01)',\n  drop: '0px 3px 10px rgba(0, 0, 0, 0.1)'\n}\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext, useContext } from 'react';\n\nconst MotionContext = createContext({});\nfunction useVisualElementContext() {\n    return useContext(MotionContext).visualElement;\n}\n\nexport { MotionContext, useVisualElementContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useVisualElementContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const parent = useVisualElementContext();\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"exit\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"whileFocus\",\n        \"whileDrag\",\n        \"whileInView\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            props[callbackName](event, info);\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const noop = (any) => any;\n\nexport { noop };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel && onTapCancel(endEvent, endInfo)\n                    : onTap && onTap(endEvent, endInfo);\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", this.node.getProps().onTap);\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        onTapStart && onTapStart(event, info);\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        onTapCancel && onTapCancel(event, info);\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    /**\n     * TODO: Remove this in 10.0\n     */\n    viewportFallback() {\n        /**\n         * Fire this in an rAF because, at this point, the animation state\n         * won't have flushed for the first time and there's certain logic in\n         * there that behaves differently on the initial animation.\n         */\n        requestAnimationFrame(() => {\n            this.hasEnteredView = true;\n            const { onViewportEnter } = this.node.getProps();\n            onViewportEnter && onViewportEnter(null);\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", true);\n            }\n        });\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once, fallback = true, } = viewport;\n        if (typeof IntersectionObserver === \"undefined\") {\n            if (fallback)\n                this.viewportFallback();\n            return;\n        }\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n};\n\nexport { frameData };\n","/*\n  Detect and load appropriate clock setting for the execution environment\n */\nconst defaultTimestep = (1 / 60) * 1000;\nconst getCurrentTime = typeof performance !== \"undefined\"\n    ? () => performance.now()\n    : () => Date.now();\nconst onNextFrame = typeof window !== \"undefined\"\n    ? (callback) => window.requestAnimationFrame(callback)\n    : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);\n\nexport { defaultTimestep, onNextFrame };\n","import { onNextFrame, defaultTimestep } from './on-next-frame.mjs';\nimport { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frameData);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? defaultTimestep\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        onNextFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        onNextFrame(processFrame);\n};\n\nexport { cancelSync, flushSync, sync };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"9.1.7\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                sync.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve) || null;\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        this.animation = null;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from '../utils/easing.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ keyframes: keyframeValues, ease = easeInOut, times, duration = 300, }) {\n    keyframeValues = [...keyframeValues];\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    function createInterpolator() {\n        return interpolate(absoluteTimes, keyframeValues, {\n            ease: Array.isArray(easingFunctions)\n                ? easingFunctions\n                : defaultEasing(keyframeValues, easingFunctions),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            keyframeValues.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { warning } from '../../utils/errors.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { findSpring, calcAngularFreq } from './find-spring.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nconst velocitySampleDuration = 5;\n/**\n * This is based on the spring implementation of Wobble https://github.com/skevy/wobble\n */\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    let origin = keyframes[0];\n    let target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    function createSpring() {\n        const initialDelta = target - origin;\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        /**\n         * If we're working on a granular scale, use smaller defaults for determining\n         * when the spring is finished.\n         *\n         * These defaults have been selected emprically based on what strikes a good\n         * ratio between feeling good and finishing as soon as changes are imperceptible.\n         */\n        const isGranularScale = Math.abs(initialDelta) < 5;\n        restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n        restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            // Underdamped spring\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (target -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            // Critically damped spring\n            resolveSpring = (t) => target -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            // Overdamped spring\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                // When performing sinh or cosh values can hit Infinity so we cap them here\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (target -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        const prevT = Math.max(0, t - velocitySampleDuration);\n                        currentVelocity = velocityPerSecond(current - resolveSpring(prevT), t - prevT);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        flipTarget: () => {\n            initialVelocity = -initialVelocity;\n            [origin, target] = [target, origin];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n","import { keyframes } from './keyframes.mjs';\nimport { spring } from './spring.mjs';\nimport { decay } from './decay.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nconst types = {\n    decay,\n    keyframes: keyframes,\n    tween: keyframes,\n    spring,\n};\nfunction loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration = 0, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animateValue({ duration, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, keyframes: keyframes$1, autoplay = true, onPlay, onStop, onComplete, onRepeat, onUpdate, type = \"keyframes\", ...options }) {\n    const initialElapsed = elapsed;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = duration;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = types[keyframes$1.length > 2 ? \"keyframes\" : type] || keyframes;\n    const origin = keyframes$1[0];\n    const target = keyframes$1[keyframes$1.length - 1];\n    let state = { done: false, value: origin };\n    /**\n     * If this value needs interpolation (ie is non-numerical), set up an interpolator.\n     * TODO: Keyframes animation also performs this step. This could be removed so it only happens here.\n     */\n    const { needsInterpolation } = animator;\n    if (needsInterpolation && needsInterpolation(origin, target)) {\n        interpolateFromNumber = interpolate([0, 100], [origin, target], {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const animation = animator({\n        ...options,\n        duration,\n        keyframes: keyframes$1,\n    });\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls && driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            state = animation.next(Math.max(0, elapsed));\n            if (interpolateFromNumber)\n                state.value = interpolateFromNumber(state.value);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate && onUpdate(state.value);\n        if (isComplete) {\n            if (repeatCount === 0) {\n                computedDuration =\n                    computedDuration !== undefined ? computedDuration : elapsed;\n            }\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay && onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop && onStop();\n            driverControls && driverControls.stop();\n        },\n        /**\n         * Set the current time of the animation. This is purposefully\n         * mirroring the WAAPI animation API to make them interchanagable.\n         * Going forward this file should be ported more towards\n         * https://github.com/motiondivision/motionone/blob/main/packages/animation/src/Animation.ts\n         * Which behaviourally adheres to WAAPI as far as possible.\n         *\n         * WARNING: This is not safe to use for most animations. We currently\n         * only use it for handoff from WAAPI within Framer.\n         *\n         * This animation function consumes time every frame rather than being sampled for time.\n         * So the sample() method performs some headless frames to ensure\n         * repeats are handled correctly. Ideally in the future we will replace\n         * that method with this, once repeat calculations are pure.\n         */\n        set currentTime(t) {\n            elapsed = initialElapsed;\n            update(t);\n        },\n        /**\n         * animate() can't yet be sampled for time, instead it\n         * consumes time. So to sample it we have to run a low\n         * temporal-resolution version.\n         */\n        sample: (t) => {\n            elapsed = initialElapsed;\n            const sampleResolution = duration && typeof duration === \"number\"\n                ? Math.max(duration * 0.5, 50)\n                : 50;\n            let sampleElapsed = 0;\n            update(0);\n            while (sampleElapsed <= t) {\n                const remaining = t - sampleElapsed;\n                update(Math.min(remaining, sampleResolution));\n                sampleElapsed += sampleResolution;\n            }\n            return state;\n        },\n    };\n}\n\nexport { animateValue, hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n","function decay({ \n/**\n * The decay animation dynamically calculates an end of the animation\n * based on the initial keyframe, so we only need to define a single keyframe\n * as default.\n */\nkeyframes = [0], velocity = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    const origin = keyframes[0];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n","function isWaapiSupportedEasing(easing) {\n    return (!easing || // Default easing\n        Array.isArray(easing) || // Bezier curve\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return Array.isArray(easing)\n        ? cubicBezierAsString(easing)\n        : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { sync } from '../../frameloop/index.mjs';\nimport { animateValue } from '../legacy-popmotion/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0;\n    if (!canAccelerateAnimation)\n        return false;\n    let { keyframes, duration = 300, elapsed = 0, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (options.type === \"spring\" || !isWaapiSupportedEasing(options.ease)) {\n        /**\n         * If we need to pre-generate keyframes and repeat is infinite then\n         * early return as this will lock the thread.\n         */\n        if (options.repeat === Infinity)\n            return;\n        const sampleAnimation = animateValue({ ...options, elapsed: 0 });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < 20000) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        delay: -elapsed,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        sync.update(() => animation.cancel());\n        onComplete && onComplete();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        get currentTime() {\n            return animation.currentTime || 0;\n        },\n        set currentTime(t) {\n            animation.currentTime = t;\n        },\n        stop: () => {\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            sync.update(() => animation.cancel());\n        },\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    return element.animate({ [valueName]: keyframes, offset: times }, {\n        delay,\n        duration,\n        easing: mapEasingToNativeEasing(ease),\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","import { delay } from '../utils/delay.mjs';\n\nfunction createInstantAnimation({ keyframes, elapsed, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n    };\n    return elapsed ? { stop: delay(setValue, -elapsed) } : setValue();\n}\n\nexport { createInstantAnimation };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { warning } from '../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from './waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from './create-instant-animation.mjs';\nimport { animateValue } from './legacy-popmotion/index.mjs';\nimport { inertia } from './legacy-popmotion/inertia.mjs';\nimport { getDefaultTransition } from './utils/default-transitions.mjs';\nimport { isAnimatable } from './utils/is-animatable.mjs';\nimport { getKeyframes } from './utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from './utils/transitions.mjs';\n\nconst createMotionValueAnimation = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ...valueTransition,\n            elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        else if (valueTransition.type === \"inertia\") {\n            /**\n             * If this is an inertia animation, we currently don't support pre-generating\n             * keyframes for this as such it must always run on the main thread.\n             */\n            return inertia(options);\n        }\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { createMotionValueAnimation };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an initial wildcard keyframe is hydrated by the origin.\n         * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n         */\n        if (target[0] === null) {\n            target[0] = origin;\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","import { animateValue } from './index.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nfunction inertia({ keyframes, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    const origin = keyframes[0];\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function findNearestBoundary(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation && currentAnimation.stop();\n        currentAnimation = animateValue({\n            keyframes: [0, 1],\n            velocity: 0,\n            ...options,\n            driver,\n            onUpdate: (v) => {\n                onUpdate && onUpdate(v);\n                options.onUpdate && options.onUpdate(v);\n            },\n            onComplete,\n            onStop,\n        });\n    }\n    function startSpring(options) {\n        startAnimation({\n            type: \"spring\",\n            stiffness: bounceStiffness,\n            damping: bounceDamping,\n            restDelta,\n            ...options,\n        });\n    }\n    if (isOutOfBounds(origin)) {\n        // Start the animation with spring if outside the defined boundaries\n        startSpring({\n            velocity,\n            keyframes: [origin, findNearestBoundary(origin)],\n        });\n    }\n    else {\n        /**\n         * Or if the value is out of bounds, simulate the inertia movement\n         * with the decay animation.\n         *\n         * Pre-calculate the target so we can detect if it's out-of-bounds.\n         * If it is, we want to check per frame when to switch to a spring\n         * animation\n         */\n        let target = power * velocity + origin;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = findNearestBoundary(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, frameData.delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ keyframes: [v, boundary], velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            keyframes: [origin, 0],\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation && currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","import { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, sync);\n            }\n        }\n        let animation = value.start(createMotionValueAnimation(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart && onDragStart(event, info);\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd && onDragEnd(event, info);\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(createMotionValueAnimation(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !((isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","import { createMotionValueAnimation } from './index.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    value.start(createMotionValueAnimation(\"\", value, to, transition));\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: onPanSessionStart,\n            onStart: onPanStart,\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                onPanEnd && onPanEnd(event, info);\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update(this.props, this.prevProps);\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"9.1.7\", `Attempting to mix Framer Motion versions ${nextValue.version} with 9.1.7 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["reactPropsRegex","prop","test","charCodeAt","testOmitPropsOnStringTag","testOmitPropsOnComponent","key","getDefaultShouldForwardProp","tag","composeShouldForwardProps","options","isReal","shouldForwardProp","optionsShouldForwardProp","__emotion_forwardProp","propName","Insertion","_ref","cache","serialized","isStringTag","createStyled","identifierName","targetClassName","__emotion_real","baseTag","__emotion_base","undefined","label","target","defaultShouldForwardProp","shouldUseAs","args","arguments","styles","__emotion_styles","slice","push","raw","apply","len","length","i","Styled","w","props","ref","FinalTag","as","className","classInterpolations","mergedProps","theme","useContext","T","registered","concat","name","finalShouldForwardProp","newProps","_key","createElement","Fragment","displayName","defaultProps","Object","defineProperty","value","withComponent","nextTag","nextOptions","Seo","___EmotionJSX","React","lang","content","type","process","TYPEKIT_ID","val","pink","black","blackRGBA","lightGray","darkGray","white","yellow","mint","red","s200","s184","s160","s152","s120","s104","s88","s72","s64","s56","s48","s40","s32","s24","s20","s18","s16","s15","s14","s12","s10","s8","s4","shadow","drop","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","useVisualElement","Component","visualState","createVisualElement","parent","visualElement","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","initial","useInsertionEffect","update","render","updateFeatures","window","HandoffAppearAnimations","animationState","animateChanges","isRefObject","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","animate","some","isVariantNode","Boolean","variants","useCreateMotionContext","context","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","useConstant","init","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","id","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","preloadedFeatures","useRender","useVisualState","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","projectionId","initialLayoutGroupConfig","isStrict","Provider","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","enableHardwareAcceleration","allowTransformNone","transformIsDefault","transformString","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","pathLength","pathSpacing","pathOffset","latest","isSVGTag","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","children","renderedChildren","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","transformers","reduce","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","constructor","node","this","isMounted","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","isNodeOrChild","child","parentElement","noop","any","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","callback","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","delete","unobserve","thresholdNames","all","gestureAnimations","super","hasEnteredView","isInView","viewportFallback","requestAnimationFrame","onViewportEnter","startObserver","viewport","rootMargin","amount","once","fallback","threshold","isIntersecting","onViewportLeave","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","isNumericalString","isZeroValueString","frameData","delta","timestamp","defaultTimestep","getCurrentTime","performance","now","Date","onNextFrame","setTimeout","useDefaultElapsed","runNextFrame","isProcessing","stepsOrder","steps","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","keepAlive","immediate","addToCurrentFrame","buffer","add","cancel","index","splice","createRenderStep","sync","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","addUniqueItem","arr","item","removeItem","SubscriptionManager","subscriptions","notify","c","numSubscriptions","getSize","clear","velocityPerSecond","velocity","frameDuration","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","hasAnimated","isNaN","owner","onChange","subscription","on","unsubscribe","read","stop","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","setWithVelocity","jump","getPrevious","startAnimation","Promise","resolve","animationStart","then","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","colorToken","numberToken","analyseComplexValue","numColors","numNumbers","colors","map","numbers","tokenised","createTransformer","numValues","output","convertNumbersToZero","complex","_b","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","testValueType","dimensionValueTypes","findDimensionValueType","find","valueTypes","findValueType","resolveVariant","getCurrent","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","from","isWillChangeMotionValue","optimizedAppearDataAttribute","warning","invariant","secondsToMilliseconds","seconds","instantAnimationState","mirrorEasing","easing","reverseEasing","easeIn","easeOut","easeInOut","to","progress","hueToRgb","q","t","mixLinearColor","fromExpo","sqrt","colorTypes","getColorType","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","ease","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","remaining","offsetProgress","fillOffset","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","circIn","sin","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","pow","easingDefinitionToFunction","x1","y1","x2","y2","isEasingArray","keyframes","keyframeValues","times","duration","easingFunctions","done","absoluteTimes","o","convertOffsetToTimes","createInterpolator","flipTarget","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","velocitySampleDuration","spring","restDelta","restSpeed","isResolvedFromDuration","springOptions","derived","getSpringOptions","resolveSpring","zero","initialVelocity","createSpring","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","prevT","isBelowVelocityThreshold","isBelowDisplacementThreshold","needsInterpolation","_t","types","decay","power","timeConstant","modifyTarget","amplitude","ideal","tween","loopElapsed","elapsed","delay","framesync","passTimestamp","animateValue","driver","repeat","repeatMax","repeatType","repeatDelay","keyframes$1","autoplay","onPlay","onStop","onComplete","onRepeat","onUpdate","initialElapsed","driverControls","interpolateFromNumber","repeatCount","computedDuration","isComplete","isForwardPlayback","animator","reverseElapsed","hasRepeatDelayElapsed","currentTime","sample","sampleResolution","sampleElapsed","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","featureTests","waapi","Element","results","supports","acceleratedValues","sampleDelta","createAcceleratedAnimation","valueName","Infinity","sampleAnimation","pregeneratedKeyframes","iterations","direction","animateStyle","onfinish","getFinalKeyframe","timeout","checkElapsed","createInstantAnimation","setValue","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","isZero","getZeroUnit","potentialUnitType","getValueTransition","createMotionValueAnimation","valueTransition","isTargetAnimatable","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","bounceStiffness","bounceDamping","currentAnimation","isOutOfBounds","findNearestBoundary","startSpring","boundary","heading","checkBoundary","inertia","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","HTMLElement","acceleratedAnimation","animateVariant","variant","transitionOverride","getAnimation","animateTarget","getChildAnimations","variantChildren","forwardDelay","animations","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","willChange","animationTypeState","getState","shouldBlockAnimation","appearId","shouldReduceMotion","remove","sortNodePosition","protectedKeys","needsAnimating","shouldBlock","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","time","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","pixelsToPercent","pixels","correctBorderRadius","correct","cssVariableRegex","maxDepth","getVariableValue","depth","exec","parseCSSVariable","getComputedStyle","getPropertyValue","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","animationTarget","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","notifyListeners","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","preRender","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","getLead","attemptToResolveRelativeTarget","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","isShared","canSkip","pendingAnimation","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasRotate","resetValues","setStaticValue","visibility","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","searchNode","querySelector","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","controls","dragControls","ProjectionNode","positionalKeys","isPositionalKey","hasPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","scrollTo","parseDomVariant","resolveCSSVariables","unitConversion","prefersReducedMotion","hasReducedMotionListener","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","renderedProps","ProjectionNodeConstructor","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","readValue","readValueFromInstance","setBaseTarget","valueFromInitial","getBaseTargetFromProps","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","motion"],"sourceRoot":""}