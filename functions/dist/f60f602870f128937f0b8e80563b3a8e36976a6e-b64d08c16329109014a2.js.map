{"version":3,"file":"f60f602870f128937f0b8e80563b3a8e36976a6e-b64d08c16329109014a2.js","mappings":"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","sources":["webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/node/id.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/value/types/utils.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/noop.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/frameloop/data.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/frameloop/on-next-frame.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/frameloop/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/array.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/value/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/errors.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/time-conversion.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/mix.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/mix-color.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/mix-complex.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/progress.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/offsets/default.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/easing/back.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/utils/easing.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/legacy-popmotion/keyframes.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/offsets/time.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/legacy-popmotion/find-spring.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/legacy-popmotion/spring.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/legacy-popmotion/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/legacy-popmotion/decay.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/waapi/easing.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/waapi/supports.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/waapi/create-accelerated-animation.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/waapi/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/waapi/utils/get-final-keyframe.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/create-instant-animation.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/legacy-popmotion/inertia.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/utils/animation.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/debug/record.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/animate.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/motion.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext, useContext } from 'react';\n\nconst MotionContext = createContext({});\nfunction useVisualElementContext() {\n    return useContext(MotionContext).visualElement;\n}\n\nexport { MotionContext, useVisualElementContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useVisualElementContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const parent = useVisualElementContext();\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"exit\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"whileFocus\",\n        \"whileDrag\",\n        \"whileInView\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            props[callbackName](event, info);\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const noop = (any) => any;\n\nexport { noop };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel && onTapCancel(endEvent, endInfo)\n                    : onTap && onTap(endEvent, endInfo);\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", this.node.getProps().onTap);\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        onTapStart && onTapStart(event, info);\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        onTapCancel && onTapCancel(event, info);\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    /**\n     * TODO: Remove this in 10.0\n     */\n    viewportFallback() {\n        /**\n         * Fire this in an rAF because, at this point, the animation state\n         * won't have flushed for the first time and there's certain logic in\n         * there that behaves differently on the initial animation.\n         */\n        requestAnimationFrame(() => {\n            this.hasEnteredView = true;\n            const { onViewportEnter } = this.node.getProps();\n            onViewportEnter && onViewportEnter(null);\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", true);\n            }\n        });\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once, fallback = true, } = viewport;\n        if (typeof IntersectionObserver === \"undefined\") {\n            if (fallback)\n                this.viewportFallback();\n            return;\n        }\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n};\n\nexport { frameData };\n","/*\n  Detect and load appropriate clock setting for the execution environment\n */\nconst defaultTimestep = (1 / 60) * 1000;\nconst getCurrentTime = typeof performance !== \"undefined\"\n    ? () => performance.now()\n    : () => Date.now();\nconst onNextFrame = typeof window !== \"undefined\"\n    ? (callback) => window.requestAnimationFrame(callback)\n    : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);\n\nexport { defaultTimestep, onNextFrame };\n","import { onNextFrame, defaultTimestep } from './on-next-frame.mjs';\nimport { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frameData);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? defaultTimestep\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        onNextFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        onNextFrame(processFrame);\n};\n\nexport { cancelSync, flushSync, sync };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"9.1.7\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                sync.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve) || null;\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        this.animation = null;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from '../utils/easing.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ keyframes: keyframeValues, ease = easeInOut, times, duration = 300, }) {\n    keyframeValues = [...keyframeValues];\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    function createInterpolator() {\n        return interpolate(absoluteTimes, keyframeValues, {\n            ease: Array.isArray(easingFunctions)\n                ? easingFunctions\n                : defaultEasing(keyframeValues, easingFunctions),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            keyframeValues.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { warning } from '../../utils/errors.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { findSpring, calcAngularFreq } from './find-spring.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nconst velocitySampleDuration = 5;\n/**\n * This is based on the spring implementation of Wobble https://github.com/skevy/wobble\n */\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    let origin = keyframes[0];\n    let target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    function createSpring() {\n        const initialDelta = target - origin;\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        /**\n         * If we're working on a granular scale, use smaller defaults for determining\n         * when the spring is finished.\n         *\n         * These defaults have been selected emprically based on what strikes a good\n         * ratio between feeling good and finishing as soon as changes are imperceptible.\n         */\n        const isGranularScale = Math.abs(initialDelta) < 5;\n        restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n        restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            // Underdamped spring\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (target -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            // Critically damped spring\n            resolveSpring = (t) => target -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            // Overdamped spring\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                // When performing sinh or cosh values can hit Infinity so we cap them here\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (target -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        const prevT = Math.max(0, t - velocitySampleDuration);\n                        currentVelocity = velocityPerSecond(current - resolveSpring(prevT), t - prevT);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        flipTarget: () => {\n            initialVelocity = -initialVelocity;\n            [origin, target] = [target, origin];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n","import { keyframes } from './keyframes.mjs';\nimport { spring } from './spring.mjs';\nimport { decay } from './decay.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nconst types = {\n    decay,\n    keyframes: keyframes,\n    tween: keyframes,\n    spring,\n};\nfunction loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration = 0, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animateValue({ duration, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, keyframes: keyframes$1, autoplay = true, onPlay, onStop, onComplete, onRepeat, onUpdate, type = \"keyframes\", ...options }) {\n    const initialElapsed = elapsed;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = duration;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = types[keyframes$1.length > 2 ? \"keyframes\" : type] || keyframes;\n    const origin = keyframes$1[0];\n    const target = keyframes$1[keyframes$1.length - 1];\n    let state = { done: false, value: origin };\n    /**\n     * If this value needs interpolation (ie is non-numerical), set up an interpolator.\n     * TODO: Keyframes animation also performs this step. This could be removed so it only happens here.\n     */\n    const { needsInterpolation } = animator;\n    if (needsInterpolation && needsInterpolation(origin, target)) {\n        interpolateFromNumber = interpolate([0, 100], [origin, target], {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const animation = animator({\n        ...options,\n        duration,\n        keyframes: keyframes$1,\n    });\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls && driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            state = animation.next(Math.max(0, elapsed));\n            if (interpolateFromNumber)\n                state.value = interpolateFromNumber(state.value);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate && onUpdate(state.value);\n        if (isComplete) {\n            if (repeatCount === 0) {\n                computedDuration =\n                    computedDuration !== undefined ? computedDuration : elapsed;\n            }\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay && onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop && onStop();\n            driverControls && driverControls.stop();\n        },\n        /**\n         * Set the current time of the animation. This is purposefully\n         * mirroring the WAAPI animation API to make them interchanagable.\n         * Going forward this file should be ported more towards\n         * https://github.com/motiondivision/motionone/blob/main/packages/animation/src/Animation.ts\n         * Which behaviourally adheres to WAAPI as far as possible.\n         *\n         * WARNING: This is not safe to use for most animations. We currently\n         * only use it for handoff from WAAPI within Framer.\n         *\n         * This animation function consumes time every frame rather than being sampled for time.\n         * So the sample() method performs some headless frames to ensure\n         * repeats are handled correctly. Ideally in the future we will replace\n         * that method with this, once repeat calculations are pure.\n         */\n        set currentTime(t) {\n            elapsed = initialElapsed;\n            update(t);\n        },\n        /**\n         * animate() can't yet be sampled for time, instead it\n         * consumes time. So to sample it we have to run a low\n         * temporal-resolution version.\n         */\n        sample: (t) => {\n            elapsed = initialElapsed;\n            const sampleResolution = duration && typeof duration === \"number\"\n                ? Math.max(duration * 0.5, 50)\n                : 50;\n            let sampleElapsed = 0;\n            update(0);\n            while (sampleElapsed <= t) {\n                const remaining = t - sampleElapsed;\n                update(Math.min(remaining, sampleResolution));\n                sampleElapsed += sampleResolution;\n            }\n            return state;\n        },\n    };\n}\n\nexport { animateValue, hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n","function decay({ \n/**\n * The decay animation dynamically calculates an end of the animation\n * based on the initial keyframe, so we only need to define a single keyframe\n * as default.\n */\nkeyframes = [0], velocity = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    const origin = keyframes[0];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n","function isWaapiSupportedEasing(easing) {\n    return (!easing || // Default easing\n        Array.isArray(easing) || // Bezier curve\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return Array.isArray(easing)\n        ? cubicBezierAsString(easing)\n        : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { sync } from '../../frameloop/index.mjs';\nimport { animateValue } from '../legacy-popmotion/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0;\n    if (!canAccelerateAnimation)\n        return false;\n    let { keyframes, duration = 300, elapsed = 0, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (options.type === \"spring\" || !isWaapiSupportedEasing(options.ease)) {\n        /**\n         * If we need to pre-generate keyframes and repeat is infinite then\n         * early return as this will lock the thread.\n         */\n        if (options.repeat === Infinity)\n            return;\n        const sampleAnimation = animateValue({ ...options, elapsed: 0 });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < 20000) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        delay: -elapsed,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        sync.update(() => animation.cancel());\n        onComplete && onComplete();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        get currentTime() {\n            return animation.currentTime || 0;\n        },\n        set currentTime(t) {\n            animation.currentTime = t;\n        },\n        stop: () => {\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            sync.update(() => animation.cancel());\n        },\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    return element.animate({ [valueName]: keyframes, offset: times }, {\n        delay,\n        duration,\n        easing: mapEasingToNativeEasing(ease),\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","import { delay } from '../utils/delay.mjs';\n\nfunction createInstantAnimation({ keyframes, elapsed, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n    };\n    return elapsed ? { stop: delay(setValue, -elapsed) } : setValue();\n}\n\nexport { createInstantAnimation };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { warning } from '../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from './waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from './create-instant-animation.mjs';\nimport { animateValue } from './legacy-popmotion/index.mjs';\nimport { inertia } from './legacy-popmotion/inertia.mjs';\nimport { getDefaultTransition } from './utils/default-transitions.mjs';\nimport { isAnimatable } from './utils/is-animatable.mjs';\nimport { getKeyframes } from './utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from './utils/transitions.mjs';\n\nconst createMotionValueAnimation = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ...valueTransition,\n            elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        else if (valueTransition.type === \"inertia\") {\n            /**\n             * If this is an inertia animation, we currently don't support pre-generating\n             * keyframes for this as such it must always run on the main thread.\n             */\n            return inertia(options);\n        }\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { createMotionValueAnimation };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an initial wildcard keyframe is hydrated by the origin.\n         * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n         */\n        if (target[0] === null) {\n            target[0] = origin;\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","import { animateValue } from './index.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nfunction inertia({ keyframes, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    const origin = keyframes[0];\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function findNearestBoundary(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation && currentAnimation.stop();\n        currentAnimation = animateValue({\n            keyframes: [0, 1],\n            velocity: 0,\n            ...options,\n            driver,\n            onUpdate: (v) => {\n                onUpdate && onUpdate(v);\n                options.onUpdate && options.onUpdate(v);\n            },\n            onComplete,\n            onStop,\n        });\n    }\n    function startSpring(options) {\n        startAnimation({\n            type: \"spring\",\n            stiffness: bounceStiffness,\n            damping: bounceDamping,\n            restDelta,\n            ...options,\n        });\n    }\n    if (isOutOfBounds(origin)) {\n        // Start the animation with spring if outside the defined boundaries\n        startSpring({\n            velocity,\n            keyframes: [origin, findNearestBoundary(origin)],\n        });\n    }\n    else {\n        /**\n         * Or if the value is out of bounds, simulate the inertia movement\n         * with the decay animation.\n         *\n         * Pre-calculate the target so we can detect if it's out-of-bounds.\n         * If it is, we want to check per frame when to switch to a spring\n         * animation\n         */\n        let target = power * velocity + origin;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = findNearestBoundary(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, frameData.delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ keyframes: [v, boundary], velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            keyframes: [origin, 0],\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation && currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","import { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, sync);\n            }\n        }\n        let animation = value.start(createMotionValueAnimation(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart && onDragStart(event, info);\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd && onDragEnd(event, info);\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(createMotionValueAnimation(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !((isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","import { createMotionValueAnimation } from './index.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    value.start(createMotionValueAnimation(\"\", value, to, transition));\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: onPanSessionStart,\n            onStart: onPanStart,\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                onPanEnd && onPanEnd(event, info);\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update(this.props, this.prevProps);\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"9.1.7\", `Attempting to mix Framer Motion versions ${nextValue.version} with 9.1.7 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","useVisualElement","Component","visualState","props","createVisualElement","parent","useContext","visualElement","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","initial","useInsertionEffect","update","render","updateFeatures","window","HandoffAppearAnimations","animationState","animateChanges","isRefObject","ref","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","context","undefined","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","key","isEnabled","useConstant","init","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","id","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","preloadedFeatures","useRender","useVisualState","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","projectionId","initialLayoutGroupConfig","isStrict","Provider","value","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","length","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","enableHardwareAcceleration","allowTransformNone","transformIsDefault","transformString","i","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","pathLength","pathSpacing","pathOffset","latest","isSVGTag","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","children","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","transformers","reduce","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","constructor","node","this","isMounted","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","isNodeOrChild","child","parentElement","noop","any","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","callback","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","delete","unobserve","thresholdNames","all","gestureAnimations","super","arguments","hasEnteredView","isInView","viewportFallback","requestAnimationFrame","onViewportEnter","startObserver","viewport","rootMargin","amount","once","fallback","threshold","isIntersecting","onViewportLeave","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","isNumericalString","isZeroValueString","frameData","delta","timestamp","defaultTimestep","getCurrentTime","performance","now","Date","onNextFrame","setTimeout","useDefaultElapsed","runNextFrame","isProcessing","stepsOrder","steps","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","keepAlive","immediate","addToCurrentFrame","buffer","add","push","cancel","index","splice","process","createRenderStep","sync","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","addUniqueItem","arr","item","removeItem","SubscriptionManager","subscriptions","notify","c","numSubscriptions","getSize","clear","velocityPerSecond","velocity","frameDuration","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","hasAnimated","isNaN","owner","onChange","subscription","on","unsubscribe","read","stop","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","setWithVelocity","jump","getPrevious","startAnimation","Promise","resolve","animationStart","then","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","colorToken","numberToken","analyseComplexValue","numColors","numNumbers","colors","map","numbers","tokenised","createTransformer","numValues","output","convertNumbersToZero","complex","_b","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","testValueType","dimensionValueTypes","findDimensionValueType","find","valueTypes","findValueType","resolveVariant","getCurrent","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","from","isWillChangeMotionValue","optimizedAppearDataAttribute","warning","invariant","secondsToMilliseconds","seconds","instantAnimationState","mirrorEasing","easing","reverseEasing","easeIn","easeOut","easeInOut","to","progress","hueToRgb","q","t","mixLinearColor","fromExpo","sqrt","colorTypes","getColorType","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","ease","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","remaining","offsetProgress","fillOffset","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","circIn","sin","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","pow","easingDefinitionToFunction","x1","y1","x2","y2","isEasingArray","keyframes","keyframeValues","times","duration","easingFunctions","done","absoluteTimes","o","convertOffsetToTimes","createInterpolator","flipTarget","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","velocitySampleDuration","spring","restDelta","restSpeed","isResolvedFromDuration","springOptions","derived","getSpringOptions","resolveSpring","zero","initialVelocity","createSpring","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","prevT","isBelowVelocityThreshold","isBelowDisplacementThreshold","needsInterpolation","_t","types","decay","power","timeConstant","modifyTarget","amplitude","ideal","tween","loopElapsed","elapsed","delay","framesync","passTimestamp","animateValue","driver","repeat","repeatMax","repeatType","repeatDelay","keyframes$1","autoplay","onPlay","onStop","onComplete","onRepeat","onUpdate","initialElapsed","driverControls","interpolateFromNumber","repeatCount","computedDuration","isComplete","isForwardPlayback","animator","reverseElapsed","hasRepeatDelayElapsed","currentTime","sample","sampleResolution","sampleElapsed","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","featureTests","waapi","Element","results","supports","acceleratedValues","sampleDelta","createAcceleratedAnimation","valueName","Infinity","sampleAnimation","pregeneratedKeyframes","iterations","direction","animateStyle","onfinish","getFinalKeyframe","timeout","checkElapsed","createInstantAnimation","setValue","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","isZero","getZeroUnit","potentialUnitType","getValueTransition","createMotionValueAnimation","valueTransition","isTargetAnimatable","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","bounceStiffness","bounceDamping","currentAnimation","isOutOfBounds","findNearestBoundary","startSpring","boundary","heading","checkBoundary","inertia","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","HTMLElement","acceleratedAnimation","animateVariant","variant","transitionOverride","getAnimation","animateTarget","getChildAnimations","variantChildren","forwardDelay","animations","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","willChange","animationTypeState","getState","shouldBlockAnimation","appearId","shouldReduceMotion","remove","sortNodePosition","protectedKeys","needsAnimating","shouldBlock","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","time","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","pixelsToPercent","pixels","correctBorderRadius","correct","cssVariableRegex","maxDepth","getVariableValue","depth","exec","parseCSSVariable","getComputedStyle","getPropertyValue","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","animationTarget","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","notifyListeners","args","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","preRender","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","getLead","attemptToResolveRelativeTarget","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","isShared","canSkip","pendingAnimation","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","searchNode","querySelector","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","controls","dragControls","ProjectionNode","positionalKeys","isPositionalKey","hasPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","scrollTo","parseDomVariant","resolveCSSVariables","unitConversion","prefersReducedMotion","hasReducedMotionListener","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","renderedProps","ProjectionNodeConstructor","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","readValue","readValueFromInstance","setBaseTarget","valueFromInitial","getBaseTargetFromProps","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","motion"],"sourceRoot":""}